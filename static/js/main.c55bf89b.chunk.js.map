{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App.jsx","redux/contacts/contacs-reduser.js","redux/store.js","index.js","components/ContactList/ContactList.module.css","components/App.module.css"],"names":["module","exports","allActions","formSubmit","createAction","name","number","payload","id","uuidv4","deleteContact","filters","ContactForm","useState","setName","setNumber","nameInputId","numberInputId","dispatch","useDispatch","onSubmit","e","preventDefault","alert","htmlFor","className","s","formInputName","type","value","onChange","currentTarget","placeholder","pattern","minLength","maxLength","title","formInputNumber","formSubmitButton","ContactList","contacts","useSelector","state","normalFilter","toLowerCase","filter","contact","includes","contactList","map","listName","listNumber","contactDelete","onClick","Filter","idFilter","filterContener","labelFilter","inputFilter","target","App","section","divConteiner","divContactList","allReducer","reducerContats","createReducer","find","reducerFilter","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,iBAAmB,sCAAsC,cAAgB,mCAAmC,gBAAkB,uC,mBCAhJD,EAAOC,QAAU,CAAC,gBAAkB,gCAAgC,YAAc,4BAA4B,YAAc,8B,yJCiB7GC,EAFI,CAAEC,WAZFC,YAAa,eAAe,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,MAAuB,CACpEC,QAAS,CACPC,GAAIC,cACJJ,OACAC,cAQ6BI,cAJXN,YAAa,kBAIaO,QAFhCP,YAAa,mB,OCoEdQ,EAzEK,WAClB,MAAwBC,mBAAS,IAAjC,mBAAOR,EAAP,KAAaS,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOP,EAAP,KAAeS,EAAf,KAEMC,EAAcP,cACdQ,EAAgBR,cAEhBS,EAAWC,cAsBjB,OACE,uBAAMC,SAnBa,SAACC,GAEpB,OADAA,EAAEC,iBACW,KAATjB,EAAoBkB,MAAM,kHACf,KAAXjB,EAAsBiB,MAAM,+HANjB,SAAClB,EAAMC,GACtBY,EAAShB,EAAWC,WAAW,CAAEE,OAAMC,YAOvCc,CAASf,EAAMC,GACfQ,EAAQ,SACRC,EAAU,MAYV,UACE,uBAAOS,QAASR,EAAhB,gCACA,uBACER,GAAIQ,EACJS,UAAWC,IAAEC,cACbC,KAAK,OACLvB,KAAK,OACLwB,MAAOxB,EACPyB,SAjBuB,SAACT,GAC5BP,EAAQO,EAAEU,cAAcF,QAiBpBG,YAAY,gEACZC,QAAQ,yHACRC,UAAU,IACVC,UAAU,KACVC,MAAM,ocAGR,uBAAOZ,QAASP,EAAhB,wDACA,uBACET,GAAIS,EACJQ,UAAWC,IAAEW,gBACbT,KAAK,MACLvB,KAAK,SACLwB,MAAOvB,EACPwB,SA5ByB,SAACT,GAC9BN,EAAUM,EAAEU,cAAcF,QA4BtBG,YAAY,kFACZC,QAAQ,yBACRC,UAAU,KACVC,UAAU,KACVC,MAAM,kDAGR,wBAAQR,KAAK,SAASH,UAAWC,IAAEY,iBAAnC,6G,gBClCSC,EA9BK,WAClB,IAAMC,EAAWC,aAAY,SAACC,GAC5B,IAAMC,EAAeD,EAAM/B,QAAQiC,cAInC,OAHwBF,EAAMF,SAASK,QAAO,SAACC,GAAD,OAC5CA,EAAQzC,KAAKuC,cAAcG,SAASJ,SAIlCzB,EAAWC,cAGjB,OACE,oBAAIM,UAAWC,IAAEsB,YAAjB,gBACGR,QADH,IACGA,OADH,EACGA,EAAUS,KAAI,gBAAGzC,EAAH,EAAGA,GAAIH,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACb,qBAAamB,UAAWC,IAAEoB,QAA1B,UACE,mBAAGrB,UAAWC,IAAEwB,SAAhB,SAA2B7C,IAC3B,mBAAGoB,UAAWC,IAAEyB,WAAhB,SAA6B7C,IAC7B,wBACEmB,UAAWC,IAAE0B,cACbxB,KAAK,SACLyB,QAAS,kBAXG,SAAC7C,GAAD,OAAQU,EAAShB,EAAWQ,cAAcF,IAWvCE,CAAcF,IAH/B,0DAHOA,S,iBCaF8C,EA1BA,WACb,IAAMC,EAAW9C,cACXoB,EAAQY,aAAY,SAACC,GAAD,OAAWA,EAAM/B,WACrCO,EAAWC,cAIjB,OACE,sBAAKM,UAAWC,IAAE8B,eAAlB,UACE,uBAAOhC,QAAS+B,EAAU9B,UAAWC,IAAE+B,YAAvC,2LAGA,uBACEjD,GAAI+C,EACJ9B,UAAWC,IAAEgC,YACb9B,KAAK,OACLC,MAAOA,EACPC,SAbqB,SAACT,GAAD,OACzBH,EAAShB,EAAWS,QAAQU,EAAEsC,OAAO9B,SAajCG,YAAY,iCACZC,QAAQ,yHACRG,MAAM,wc,gBCSCwB,EA1BH,WACV,OACE,qCACE,yBAASnC,UAAWC,IAAEmC,QAAtB,SACE,sBAAKpC,UAAWC,IAAEoC,aAAlB,UACE,6HACA,cAAC,EAAD,SAGJ,yBAASrC,UAAWC,IAAEmC,QAAtB,SACE,sBAAKpC,UAAWC,IAAEqC,eAAlB,UACE,kFACA,cAAC,EAAD,IACA,cAAC,EAAD,a,uBCGKC,EAFI,CAAEC,eApBEC,YAAc,IAAD,mBACjChE,EAAWC,YAAa,SAACuC,EAAD,GAAyB,IAAfnC,EAAc,EAAdA,QAIjC,OAHqBmC,EAAMyB,MACzB,SAACrB,GAAD,OAAaA,EAAQzC,KAAKuC,gBAAkBrC,EAAQF,KAAKuC,kBAGzDrB,MAAM,qKAAD,OAAoChB,EAAQF,KAA5C,iDACEqC,GAGH,GAAN,mBAAWA,GAAX,CAAkBnC,OAVc,cAYjCL,EAAWQ,eAAgB,SAACgC,EAAD,OAAUnC,EAAV,EAAUA,QAAV,OAC1BmC,EAAMG,QAAO,qBAAGrC,KAAgBD,QAbA,IAoBC6D,cAJfF,YAAc,GAAD,eAChChE,EAAWS,SAAU,SAAC+B,EAAD,YAAUnC,aC8BnB8D,EAxBDC,YAAe,CAC3BC,QAAS,CACP/B,SAAUwB,EAAWC,eACrBtD,QAASqD,EAAWI,eAEtBI,WAAYC,YAAqB,CAC/BC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,UCzBhEC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUf,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJgB,SAASC,eAAe,U,kBCd1BtF,EAAOC,QAAU,CAAC,QAAU,6BAA6B,cAAgB,mCAAmC,YAAc,iCAAiC,SAAW,8BAA8B,WAAa,kC,kBCAjND,EAAOC,QAAU,CAAC,QAAU,qBAAqB,aAAe,0BAA0B,eAAiB,+B","file":"static/js/main.c55bf89b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSubmitButton\":\"ContactForm_formSubmitButton__2WdGD\",\"formInputName\":\"ContactForm_formInputName__3piIq\",\"formInputNumber\":\"ContactForm_formInputNumber__1yixk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterConteiner\":\"Filter_filterConteiner__2YTJz\",\"labelFilter\":\"Filter_labelFilter__3lXFN\",\"inputFilter\":\"Filter_inputFilter__fLLJ3\"};","/** @format */\nimport { v4 as uuidv4 } from \"uuid\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nconst formSubmit = createAction(\"add_Contact\", ({ name, number }) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction(\"delete_Contact\");\n\nconst filters = createAction(\"filter_contact\");\n\nconst allActions = { formSubmit, deleteContact, filters };\n\nexport default allActions;\n","/** @format */\n\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport PropTypes from \"prop-types\";\nimport s from \"../ContactForm/ContactForm.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport allActions from \"../../redux/contacts/contacts-actions\";\n\nconst ContactForm = () => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const nameInputId = uuidv4();\n  const numberInputId = uuidv4();\n\n  const dispatch = useDispatch();\n  const onSubmit = (name, number) =>\n    dispatch(allActions.formSubmit({ name, number }));\n\n  const handelSubmit = (e) => {\n    e.preventDefault();\n    if (name === \"\") return alert(\"Введите имя контакта\");\n    if (number === \"\") return alert(\"Введите номер телефона\");\n\n    onSubmit(name, number);\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleIputChangeName = (e) => {\n    setName(e.currentTarget.value);\n  };\n\n  const handleIputChangeNumber = (e) => {\n    setNumber(e.currentTarget.value);\n  };\n\n  return (\n    <form onSubmit={handelSubmit}>\n      <label htmlFor={nameInputId}>Имя</label>\n      <input\n        id={nameInputId}\n        className={s.formInputName}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleIputChangeName}\n        placeholder=\"Имя Фамилия\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        minLength=\"2\"\n        maxLength=\"40\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n      />\n\n      <label htmlFor={numberInputId}>Телефон</label>\n      <input\n        id={numberInputId}\n        className={s.formInputNumber}\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        onChange={handleIputChangeNumber}\n        placeholder=\"Номер телефона\"\n        pattern=\"\\+?[0-9\\s\\-\\(\\)]+\"\n        minLength=\"10\"\n        maxLength=\"13\"\n        title=\"+380223332222 или (044)7881000\"\n      />\n\n      <button type=\"submit\" className={s.formSubmitButton}>\n        Добавить контакт\n      </button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nexport default ContactForm;\n","/** @format */\n\nimport s from \"./ContactList.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport allActions from \"../../redux/contacts/contacts-actions\";\n\nconst ContactList = () => {\n  const contacts = useSelector((state) => {\n    const normalFilter = state.filters.toLowerCase();\n    const visibleContacns = state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalFilter)\n    );\n    return visibleContacns;\n  });\n  const dispatch = useDispatch();\n  const deleteContact = (id) => dispatch(allActions.deleteContact(id));\n\n  return (\n    <ul className={s.contactList}>\n      {contacts?.map(({ id, name, number }) => (\n        <li key={id} className={s.contact}>\n          <p className={s.listName}>{name}</p>\n          <p className={s.listNumber}>{number}</p>\n          <button\n            className={s.contactDelete}\n            type=\"button\"\n            onClick={() => deleteContact(id)}\n          >\n            удалить\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","/** @format */\n\nimport s from \"../Filter/Filter.module.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport allActions from \"../../redux/contacts/contacts-actions\";\n\nconst Filter = () => {\n  const idFilter = uuidv4();\n  const value = useSelector((state) => state.filters);\n  const dispatch = useDispatch();\n  const handleFilterChange = (e) =>\n    dispatch(allActions.filters(e.target.value));\n\n  return (\n    <div className={s.filterContener}>\n      <label htmlFor={idFilter} className={s.labelFilter}>\n        Поиск контактов по имени и фамили\n      </label>\n      <input\n        id={idFilter}\n        className={s.inputFilter}\n        type=\"text\"\n        value={value}\n        onChange={handleFilterChange}\n        placeholder=\"Поиск\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","/** @format */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport ContactList from \"./ContactList/ContactList\";\n\nimport Filter from \"./Filter/Filter\";\nimport s from \"../components/App.module.css\";\n\nconst App = () => {\n  return (\n    <>\n      <section className={s.section}>\n        <div className={s.divConteiner}>\n          <h1>Телефонная книга</h1>\n          <ContactForm />\n        </div>\n      </section>\n      <section className={s.section}>\n        <div className={s.divContactList}>\n          <h2>Контакты</h2>\n          <Filter />\n          <ContactList />\n        </div>\n      </section>\n    </>\n  );\n};\n\nApp.propTypes = {\n  contacts: PropTypes.array,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nexport default App;\n","/** @format */\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport allActions from \"./contacts-actions\";\n\nconst reducerContats = createReducer([], {\n  [allActions.formSubmit]: (state, { payload }) => {\n    const arryFindName = state.find(\n      (contact) => contact.name.toLowerCase() === payload.name.toLowerCase()\n    );\n    if (arryFindName) {\n      alert(`Ошибка, контакт с данным именем ${payload.name} уже есть`);\n      return state;\n    }\n\n    return [...state, payload];\n  },\n  [allActions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst reducerFilter = createReducer(\"\", {\n  [allActions.filters]: (state, { payload }) => payload,\n});\n\nconst allReducer = { reducerContats, reducerFilter };\n\nexport default allReducer;\n","/** @format */\n\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport allReducer from \"../redux/contacts/contacs-reduser\";\n\n// const contactsPersistConfig = {\n//   key: \"contacts\",\n//   storage,\n//   blacklist: [\"filters\"],\n// };\n\n// const persistRedusers = persistReducer(\n//   contactsPersistConfig,\n//   combineReducers({\n//     contacts: allReducer.reducerContats,\n//     filters: allReducer.reducerFilter,\n//   })\n// );\n\nconst store = configureStore({\n  reducer: {\n    contacts: allReducer.reducerContats,\n    filters: allReducer.reducerFilter,\n  },\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\n// const store = configureStore({\n//   reducer: persistRedusers,\n//   middleware: getDefaultMiddleware({\n//     serializableCheck: {\n//       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//     },\n//   }),\n// });\n\n// const persistor = persistStore(store);\n// const allStore = { store, persistor };\n\nexport default store;\n","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactList_contact__3ZIyH\",\"contactDelete\":\"ContactList_contactDelete__iGfsw\",\"contactList\":\"ContactList_contactList__3MzlG\",\"listName\":\"ContactList_listName__2W0zJ\",\"listNumber\":\"ContactList_listNumber__3TNxO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"App_section__sENSi\",\"divConteiner\":\"App_divConteiner__1oPbJ\",\"divContactList\":\"App_divContactList__2k31a\"};"],"sourceRoot":""}