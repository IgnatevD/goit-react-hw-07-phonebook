{"version":3,"sources":["components/ContactList/ContactList.module.css","components/App.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","servis/contacts-API.js","redux/contacts/contacts-operation.js","components/ContactForm/ContactForm.jsx","redux/contacts/contacts-selectors.js","components/ContactList/ContactList.jsx","redux/contacts/contacts-actions.js","components/Filter/Filter.jsx","components/App.jsx","redux/contacts/contacs-reduser.js","redux/contacts/contacts-reduser-api.js","redux/store.js","index.js"],"names":["module","exports","fetchConacts","a","axios","get","data","fetchConactsPost","obj","post","fetchConactsDelete","id","delete","defaults","baseURL","contactsFetch","createAsyncThunk","_","rejectWithValue","conactsAPI","contacts","contactsFetchPost","contact","contactsFetchDelete","console","log","ContactForm","useState","name","setName","number","setNumber","nameInputId","uuidv4","numberInputId","dispatch","useDispatch","onSubmit","e","preventDefault","alert","contactsOperation","htmlFor","className","s","formInputName","type","value","onChange","currentTarget","placeholder","pattern","minLength","maxLength","title","formInputNumber","formSubmitButton","allSelectors","visibleContacnsList","state","normalFilter","filters","toLowerCase","entris","filter","includes","newContactc","ContactList","useSelector","useEffect","contactList","length","map","listName","listNumber","contactDelete","onClick","deleteContact","allActions","formSubmit","createAction","payload","fetchContactRequest","fetchContactSucess","fetchContactError","Filter","idFilter","filterContener","labelFilter","inputFilter","target","App","section","divConteiner","divContactList","allReducer","reducerFilter","createReducer","fulfilled","find","fnNewListContacts","isLoding","pending","rejected","error","action","contactsReduscer","combineReducers","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bdab129a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactList_contact__3ZIyH\",\"contactDelete\":\"ContactList_contactDelete__iGfsw\",\"contactList\":\"ContactList_contactList__3MzlG\",\"listName\":\"ContactList_listName__2W0zJ\",\"listNumber\":\"ContactList_listNumber__3TNxO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"App_section__sENSi\",\"divConteiner\":\"App_divConteiner__1oPbJ\",\"divContactList\":\"App_divContactList__2k31a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSubmitButton\":\"ContactForm_formSubmitButton__2WdGD\",\"formInputName\":\"ContactForm_formInputName__3piIq\",\"formInputNumber\":\"ContactForm_formInputNumber__1yixk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterConteiner\":\"Filter_filterConteiner__2YTJz\",\"labelFilter\":\"Filter_labelFilter__3lXFN\",\"inputFilter\":\"Filter_inputFilter__fLLJ3\"};","/** @format */\n\nimport axios from \"axios\";\n\naxios.defaults.baseURL = \"http://localhost:3033\";\n\nexport async function fetchConacts() {\n  const { data } = await axios.get(`/contacts`);\n  return data;\n}\n\nexport async function fetchConactsPost(obj) {\n  const { data } = await axios.post(`/contacts`, obj);\n  return data;\n}\n\nexport async function fetchConactsDelete(id) {\n  await axios.delete(`/contacts/${id}`);\n  const { data } = await axios.get(`/contacts`);\n  return data;\n}\n","/** @format */\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport * as conactsAPI from \"../../servis/contacts-API\";\n\nexport const contactsFetch = createAsyncThunk(\n  \"/contacts/fetchContact\",\n  async (_, { rejectWithValue }) => {\n    try {\n      const contacts = await conactsAPI.fetchConacts();\n      return contacts;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const contactsFetchPost = createAsyncThunk(\n  \"/contacts/contactsFetchPost\",\n  async (contact, { rejectWithValue }) => {\n    try {\n      const contacts = await conactsAPI.fetchConactsPost(contact);\n      return contacts;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const contactsFetchDelete = createAsyncThunk(\n  \"/contacts/contactsFetchDelete\",\n  async (id, { rejectWithValue }) => {\n    try {\n      const contacts = await conactsAPI.fetchConactsDelete(id);\n      console.log(contacts);\n      return contacts;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n","/** @format */\n\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport PropTypes from \"prop-types\";\nimport s from \"../ContactForm/ContactForm.module.css\";\nimport { useDispatch } from \"react-redux\";\n// import allActions from \"../../redux/contacts/contacts-actions\";\nimport * as contactsOperation from \"../../redux/contacts/contacts-operation\";\n\nconst ContactForm = () => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const nameInputId = uuidv4();\n  const numberInputId = uuidv4();\n\n  const dispatch = useDispatch();\n\n  const onSubmit = (name, number) =>\n    dispatch(contactsOperation.contactsFetchPost({ name, number }));\n\n  const handelSubmit = (e) => {\n    e.preventDefault();\n    if (name === \"\") return alert(\"Введите имя контакта\");\n    if (number === \"\") return alert(\"Введите номер телефона\");\n\n    onSubmit(name, number);\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleIputChangeName = (e) => {\n    setName(e.currentTarget.value);\n  };\n\n  const handleIputChangeNumber = (e) => {\n    setNumber(e.currentTarget.value);\n  };\n\n  return (\n    <form onSubmit={handelSubmit}>\n      <label htmlFor={nameInputId}>Имя</label>\n      <input\n        id={nameInputId}\n        className={s.formInputName}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleIputChangeName}\n        placeholder=\"Имя Фамилия\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        minLength=\"2\"\n        maxLength=\"40\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n      />\n\n      <label htmlFor={numberInputId}>Телефон</label>\n      <input\n        id={numberInputId}\n        className={s.formInputNumber}\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        onChange={handleIputChangeNumber}\n        placeholder=\"Номер телефона\"\n        pattern=\"\\+?[0-9\\s\\-\\(\\)]+\"\n        minLength=\"10\"\n        maxLength=\"13\"\n        title=\"+380223332222 или (044)7881000\"\n      />\n\n      <button type=\"submit\" className={s.formSubmitButton}>\n        Добавить контакт\n      </button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nexport default ContactForm;\n","/** @format */\n\nconst visibleContacnsList = (state) => {\n  const normalFilter = state?.filters?.toLowerCase();\n  const visibleContacns = state?.contacts?.entris?.filter((contact) =>\n    contact?.name?.toLowerCase().includes(normalFilter)\n  );\n  return visibleContacns;\n};\n\nconst newContactc = (state) => state?.contacts?.entris;\n\nconst allSelectors = { visibleContacnsList, newContactc };\n\nexport default allSelectors;\n","/** @format */\n\nimport s from \"./ContactList.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  contactsFetch,\n  contactsFetchDelete,\n} from \"../../redux/contacts/contacts-operation\";\nimport { useEffect } from \"react\";\nimport allSelectors from \"../../redux/contacts/contacts-selectors\";\n\nconst ContactList = () => {\n  const contacts = useSelector((state) => {\n    return allSelectors.visibleContacnsList(state);\n  });\n\n  const dispatch = useDispatch();\n  const deleteContact = (id) => dispatch(contactsFetchDelete(id));\n\n  useEffect(() => {\n    dispatch(contactsFetch());\n  }, [dispatch]);\n\n  return (\n    <ul className={s.contactList}>\n      {contacts?.length > 0 &&\n        contacts?.map(({ id, name, number }) => (\n          <li key={id} className={s.contact}>\n            <p className={s.listName}>{name}</p>\n            <p className={s.listNumber}>{number}</p>\n            <button\n              className={s.contactDelete}\n              type=\"button\"\n              onClick={() => deleteContact(id)}\n            >\n              удалить\n            </button>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","/** @format */\nimport { v4 as uuidv4 } from \"uuid\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nconst formSubmit = createAction(\"add_Contact\", ({ name, number }) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction(\"delete_Contact\");\n\nconst filters = createAction(\"filter_contact\");\n\nconst fetchContactRequest = createAction(\"/contacts/fetchContactRequest\");\nconst fetchContactSucess = createAction(\"/contacts/fetchContactSucess\");\nconst fetchContactError = createAction(\"/contacts/fetchContactError\");\n\nconst allActions = {\n  formSubmit,\n  deleteContact,\n  filters,\n  fetchContactRequest,\n  fetchContactSucess,\n  fetchContactError,\n};\n\nexport default allActions;\n","/** @format */\n\nimport s from \"../Filter/Filter.module.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport allActions from \"../../redux/contacts/contacts-actions\";\n\nconst Filter = () => {\n  const idFilter = uuidv4();\n  const value = useSelector((state) => state.filters);\n  const dispatch = useDispatch();\n  const handleFilterChange = (e) =>\n    dispatch(allActions.filters(e.target.value));\n\n  return (\n    <div className={s.filterContener}>\n      <label htmlFor={idFilter} className={s.labelFilter}>\n        Поиск контактов по имени и фамилии\n      </label>\n      <input\n        id={idFilter}\n        className={s.inputFilter}\n        type=\"text\"\n        value={value}\n        onChange={handleFilterChange}\n        placeholder=\"Поиск\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","/** @format */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport ContactList from \"./ContactList/ContactList\";\n\nimport Filter from \"./Filter/Filter\";\nimport s from \"../components/App.module.css\";\n\nconst App = () => {\n  return (\n    <>\n      <section className={s.section}>\n        <div className={s.divConteiner}>\n          <h1>Телефонная книга</h1>\n          <ContactForm />\n        </div>\n      </section>\n      <section className={s.section}>\n        <div className={s.divContactList}>\n          <h2>Контакты</h2>\n          <Filter />\n          <ContactList />\n        </div>\n      </section>\n    </>\n  );\n};\n\nApp.propTypes = {\n  contacts: PropTypes.array,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nexport default App;\n","/** @format */\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport allActions from \"./contacts-actions\";\n\n// const reducerContats = createReducer([], {\n//   [allActions.formSubmit]: (state, { payload }) => {\n//     const arryFindName = state.find(\n//       (contact) => contact.name.toLowerCase() === payload.name.toLowerCase()\n//     );\n//     if (arryFindName) {\n//       alert(`Ошибка, контакт с данным именем ${payload.name} уже есть`);\n//       return state;\n//     }\n\n//     return [...state, payload];\n//   },\n//   [allActions.deleteContact]: (state, { payload }) =>\n//     state.filter(({ id }) => id !== payload),\n// });\n\nconst reducerFilter = createReducer(\"\", {\n  [allActions.filters]: (state, { payload }) => payload,\n});\n\nconst allReducer = { reducerFilter };\n\nexport default allReducer;\n","/** @format */\n\nimport { createReducer, combineReducers } from \"@reduxjs/toolkit\";\n\nimport {\n  contactsFetch,\n  contactsFetchDelete,\n  contactsFetchPost,\n} from \"./contacts-operation\";\n\nconst fnNewListContacts = (state, { payload }) => {\n  const arryFindName = state.find(\n    (contact) => contact.name.toLowerCase() === payload.name.toLowerCase()\n  );\n  if (arryFindName) {\n    alert(`Ошибка, контакт с данным именем ${payload.name} уже есть`);\n    return state;\n  }\n  return [...state, payload];\n};\n\nconst entris = createReducer([], {\n  [contactsFetch.fulfilled]: (_, { payload }) => {\n    return payload;\n  },\n\n  [contactsFetchPost.fulfilled]: (state, { payload }) => {\n    return fnNewListContacts(state, { payload });\n  },\n\n  [contactsFetchDelete.fulfilled]: (state, { payload }) => {\n    return payload;\n  },\n});\n\nconst isLoding = createReducer(false, {\n  [contactsFetch.pending]: () => true,\n  [contactsFetch.fulfilled]: () => false,\n  [contactsFetch.rejected]: () => false,\n\n  [contactsFetchPost.pending]: () => true,\n  [contactsFetchPost.fulfilled]: () => false,\n  [contactsFetchPost.rejected]: () => false,\n\n  [contactsFetchDelete.pending]: () => true,\n  [contactsFetchDelete.fulfilled]: () => false,\n  [contactsFetchDelete.rejected]: () => false,\n});\n\nconst error = createReducer(null, {\n  [contactsFetch.rejected]: (state, action) => action.payload,\n  [contactsFetch.fulfilled]: () => null,\n\n  [contactsFetchPost.rejected]: (state, action) => action.payload,\n  [contactsFetchPost.fulfilled]: () => null,\n\n  [contactsFetchDelete.rejected]: (state, action) => action.payload,\n  [contactsFetchDelete.fulfilled]: () => null,\n});\n\nconst contactsReduscer = combineReducers({\n  entris,\n  isLoding,\n  error,\n});\n\nexport default contactsReduscer;\n","/** @format */\n\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport allReducer from \"../redux/contacts/contacs-reduser\";\nimport contactsReduscer from \"./contacts/contacts-reduser-api\";\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReduscer,\n    filters: allReducer.reducerFilter,\n  },\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nexport default store;\n","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}